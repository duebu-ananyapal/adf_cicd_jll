{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-dev-ws-jll"
		},
		"ls_adls_jllstorageadlsmedallion_medallion_storage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_jllstorageadlsmedallion_medallion_storage'"
		},
		"ls_blob_jllstoragebloblanding_storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blob_jllstoragebloblanding_storage'"
		},
		"ls_source_sqldb_jll_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_source_sqldb_jll'"
		},
		"ls_adls_jllstorageadlsmedallion_medallion_storage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://jllstorageadlsmedallion.dfs.core.windows.net/"
		},
		"ls_restAPI_pokemon_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pokeapi.co/api/v2/pokemon/"
		},
		"ls_source_sqldb_jll_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "jllserver.database.windows.net"
		},
		"ls_source_sqldb_jll_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "jll"
		},
		"ls_source_sqldb_jll_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminspal16"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_scheduled')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Scheduled Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ingest_sqldb",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Alerts",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute Scheduled Pipeline",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-05.uksouth.logic.azure.com:443/workflows/15eebc8162b84417b8bfac21aea73063/triggers/When_an_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_an_HTTP_request_is_received%2Frun&sv=1.0&sig=lK5Pxh2P9hCjmHT6qsPksIkQP-UiHnoVCrxWUvbtb5M",
							"body": {
								"value": "{\n    \"pipeline name\" : \"@{pipeline().Pipeline}\",\n    \"pipeline run_id\" : \"@{pipeline().RunId}\",\n    \"error_message\" : \"@{activity('Execute Scheduled Pipeline').error.message}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "adfpro_ansh"
				},
				"annotations": [],
				"lastPublishTime": "2025-10-19T05:43:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_sqldb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_cdc_timestamp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_lookup_cdctimestamp",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Lookup_cdc_timestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_source_sqldb_jll",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat(\n    'Select count(*) as total_count from ',\n    pipeline().parameters.schema, '.', pipeline().parameters.table,\n    ' where last_updated ',\n    if(\n        empty(pipeline().parameters.backdate),\n        concat('> ''', activity('Lookup_cdc_timestamp').output.value[0].cdc_timestamp, ''''),\n        concat(\n      '>= ''', pipeline().parameters.backdate,\n      ''' AND last_updated < ''', \n      formatDateTime(addDays(pipeline().parameters.backdate, 1), 'yyyy-MM-dd'), ''''\n    )\n    )\n)\n",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "If new records greater than 0",
						"type": "IfCondition",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Script1').output.resultSets[0].rows[0].total_count,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data SQL db - Blob Storage",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat(\n    'Select * from ',\n    pipeline().parameters.schema, '.', pipeline().parameters.table,\n    ' where last_updated ',\n    if(\n        empty(pipeline().parameters.backdate),\n        concat('> ''', activity('Lookup_cdc_timestamp').output.value[0].cdc_timestamp, ''''),\n        concat(\n      '>= ''', pipeline().parameters.backdate,\n      ''' AND last_updated < ''', \n      formatDateTime(addDays(pipeline().parameters.backdate, 1), 'yyyy-MM-dd'), ''''\n    )\n    )\n)\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sqldb_source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_sink_sqldb",
											"type": "DatasetReference",
											"parameters": {
												"p_file_name": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"p_folder_name": "Orders"
											}
										}
									]
								},
								{
									"name": "Update last CDC timestamp",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "max cdc",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "cdc_timestamp",
													"value": {
														"value": "@activity('max cdc').output.resultsets[0].rows[0].cdc_timestamp",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_lookup_emptyjson",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_lookup_cdctimestamp",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "max cdc",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Copy data SQL db - Blob Storage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "ls_source_sqldb_jll",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "select max(last_updated) as cdc_timestamp from @{pipeline().parameters.schema}.@{pipeline().parameters.table}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "source"
					},
					"table": {
						"type": "string",
						"defaultValue": "Orders"
					},
					"backdate": {
						"type": "string"
					}
				},
				"variables": {
					"timestamp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "adfpro_ansh"
				},
				"annotations": [],
				"lastPublishTime": "2025-10-19T09:04:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_lookup_cdctimestamp')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_source_sqldb_jll')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqldb_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_sqldb')]",
				"[concat(variables('factoryId'), '/datasets/ds_lookup_emptyjson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_pokemon')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "restapi-endpoint",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$.next"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_pokemon_list",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sink_restAPI_Pokemon",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "restapi-endpoint",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://pokeapi.co/api/v2/pokemon/"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "adfpro_ansh"
				},
				"annotations": [],
				"lastPublishTime": "2025-10-19T13:39:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_pokemon_list')]",
				"[concat(variables('factoryId'), '/datasets/ds_sink_restAPI_Pokemon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sourcefiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata of source files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_blob_sourcefiles",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "sourcefiles"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata of source files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata of source files').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": "*.csv",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_blob_sourcefiles",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "sourcefiles"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_adls_sourcefiles",
											"type": "DatasetReference",
											"parameters": {
												"p_sink_container": "sourcefiles",
												"p_sink_folder": {
													"value": "@formatDateTime(utcNow(),'yyyy-MM-dd')",
													"type": "Expression"
												},
												"p_sink_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "adfpro_ansh"
				},
				"annotations": [],
				"lastPublishTime": "2025-10-21T12:45:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_sourcefiles')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_sourcefiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sourcefiles_switch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_blob_sourcefiles",
								"type": "DatasetReference",
								"parameters": {
									"p_container": "sourcefiles"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Switch files",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@split(item().name,'.')[0]",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "customers",
												"activities": [
													{
														"name": "Copy data customers",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "ParquetSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings",
																	"copyBehavior": "PreserveHierarchy"
																},
																"formatSettings": {
																	"type": "ParquetWriteSettings"
																}
															},
															"enableStaging": false,
															"enableSkipIncompatibleRow": true,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "ds_blob_sourcefiles_switch",
																"type": "DatasetReference",
																"parameters": {
																	"p_container": "sourcefiles",
																	"p_file": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "ds_adls_sourcefiles",
																"type": "DatasetReference",
																"parameters": {
																	"p_sink_container": "sourcefiles",
																	"p_sink_folder": {
																		"value": "customers_@{formatDateTime(utcNow(),'yyyy-MM-dd')}",
																		"type": "Expression"
																	},
																	"p_sink_file": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											},
											{
												"value": "drivers",
												"activities": [
													{
														"name": "Copy data drivers",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "ParquetSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings",
																	"copyBehavior": "PreserveHierarchy"
																},
																"formatSettings": {
																	"type": "ParquetWriteSettings"
																}
															},
															"enableStaging": false,
															"enableSkipIncompatibleRow": true,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "ds_blob_sourcefiles_switch",
																"type": "DatasetReference",
																"parameters": {
																	"p_container": "sourcefiles",
																	"p_file": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "ds_adls_sourcefiles",
																"type": "DatasetReference",
																"parameters": {
																	"p_sink_container": "sourcefiles",
																	"p_sink_folder": {
																		"value": "drivers_@{formatDateTime(utcNow(),'yyyy-MM-dd')}",
																		"type": "Expression"
																	},
																	"p_sink_file": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											},
											{
												"value": "trips",
												"activities": [
													{
														"name": "Copy data trips",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobStorageReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "ParquetSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings",
																	"copyBehavior": "PreserveHierarchy"
																},
																"formatSettings": {
																	"type": "ParquetWriteSettings"
																}
															},
															"enableStaging": false,
															"enableSkipIncompatibleRow": true,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "ds_blob_sourcefiles_switch",
																"type": "DatasetReference",
																"parameters": {
																	"p_container": "sourcefiles",
																	"p_file": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "ds_adls_sourcefiles",
																"type": "DatasetReference",
																"parameters": {
																	"p_sink_container": "sourcefiles",
																	"p_sink_folder": {
																		"value": "trips_@{formatDateTime(utcNow(),'yyyy-MM-dd')}",
																		"type": "Expression"
																	},
																	"p_sink_file": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "adfpro_ansh"
				},
				"annotations": [],
				"lastPublishTime": "2025-10-21T14:21:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_sourcefiles')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_sourcefiles_switch')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_sourcefiles')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_wait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait for 5 seconds",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "sunny"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_sourcefiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_jllstorageadlsmedallion_medallion_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_sink_container": {
						"type": "string"
					},
					"p_sink_folder": {
						"type": "string"
					},
					"p_sink_file": {
						"type": "string"
					}
				},
				"folder": {
					"name": "adfpro_ansh/sink"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_sink_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_sink_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().p_sink_container",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_jllstorageadlsmedallion_medallion_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_sourcefiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_jllstoragebloblanding_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					}
				},
				"folder": {
					"name": "adfpro_ansh/source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().p_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_jllstoragebloblanding_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_sourcefiles_switch')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_jllstoragebloblanding_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					},
					"p_file": {
						"type": "string"
					}
				},
				"folder": {
					"name": "adfpro_ansh/source"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().p_file",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().p_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_jllstoragebloblanding_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lookup_cdctimestamp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_jllstoragebloblanding_storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adfpro_ansh/lookup"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "cdc.json",
						"container": "lookup-jsons"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_jllstoragebloblanding_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lookup_emptyjson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_jllstoragebloblanding_storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adfpro_ansh/lookup"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "empty.json",
						"container": "lookup-jsons"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_jllstoragebloblanding_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_pokemon_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_restAPI_pokemon",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adfpro_ansh/source"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_restAPI_pokemon')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_restAPI_Pokemon')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_jllstoragebloblanding_storage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adfpro_ansh/sink"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "pokemon.json",
						"folderPath": "pokemon",
						"container": "sink"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_jllstoragebloblanding_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sink_sqldb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_jllstoragebloblanding_storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_file_name": {
						"type": "String"
					},
					"p_folder_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "adfpro_ansh/sink"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_folder_name",
							"type": "Expression"
						},
						"container": "sink"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_jllstoragebloblanding_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqldb_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_sqldb_jll",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "adfpro_ansh/source"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_source_sqldb_jll')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_jllstorageadlsmedallion_medallion_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_jllstorageadlsmedallion_medallion_storage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_jllstorageadlsmedallion_medallion_storage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blob_jllstoragebloblanding_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blob_jllstoragebloblanding_storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_restAPI_pokemon')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_restAPI_pokemon_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_source_sqldb_jll')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_source_sqldb_jll_properties_typeProperties_server')]",
					"database": "[parameters('ls_source_sqldb_jll_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_source_sqldb_jll_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_source_sqldb_jll_password')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}